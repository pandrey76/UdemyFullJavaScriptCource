
let options = {
    width:  1024,   // какая-нибудь ширина
    height: 1024,    // какая-нибудь высота
    name:   "test", // какое-нибудь имя
};
console.log(options.name);  // Выведется: test
options.bool = false;
options.colors = {
    border: "black",
    bg: "red",
};
delete options.bool;
console.log(options);
for(let key in options){
    console.log('Свойство ' + key + ' имеет значение ' + options[key]);
}
console.log(Object.keys(options).length);

// Массивы это такие структуры, которые содержат элементы по порядку
// Это может быть масив с моими вкладками в браузере имено с их адресами
// или набор каких то функций, или даже смешанный масив с разными данными
// чаще всего мы хотим добавить или удалить элемент из нашего масива.
// У нас есть методы для работы с концом масива и с его началом.

let arr = [1, 2, 3, 4, 5];
console.log(arr);   // Выведется:   [ 1, 2, 3, 4, 5 ]

// Для того чтобы удалить элемент из масива с конца, т.е. последний элемент
// у нас есть команда "pop".
arr.pop();
console.log(arr);   // Выведется:   [ 1, 2, 3, 4 ]

// добавляем элемент в масив
// 5, но уже в виде строки
arr.push("5");
console.log(arr);   // Выведется:   [ 1, 2, 3, 4, '5' ]

// Используем метод shift, для удаления первого элемента из масива
arr.shift();
console.log(arr);   // Выведется:   [ 2, 3, 4, '5' ]

// Добавляем элемент в начало масива
arr.unshift("1");
console.log(arr);   // Выведется:   [ '1', 2, 3, 4, '5' ]

// Перебираем элементы в масиве
for (let i = 0; i < arr.length; i++)
{
    console.log(arr[i]);    // Выведется:
                            //    1
                            //    2
                            //    3
                            //    4
                            //     5
}
// Мы указали свойство масивов "length", то стоит отметить, что
// для масивов это свойство работает немного по другому.
// Мы должны понимать, что в масиве могут содержатся элементы с
// разными порядковыми числами, т.е. если я запишу "arr[99] ="  это значит
// что я создаю 99 элемент в нашем масиве
arr[99] = 99;
console.log(arr);   // [ '1', 2, 3, 4, '5', <94 empty items>, 99 ]
// Запись типа "arr[99] = 99;" является грубой ошибкой. Мы никогда не должны
// указывать строго номер каого-нибудь элемента в масиве иначе это
// может привести к появлению пустых элементов в
// нашем масиве ("[ '1', 2, 3, 4, '5', <94 empty items>, 99 ]").
// В этом главная суть масива, все элементы должны быть по порядку.
// Хотя на практике бывают случаи, когда это не всегда так, но
// всё же необходимо придерживатся канонов.
// Однако сейчас мы написали эту структуру (arr[99] = 99;) не совсем для этого
// если вывести длину нашего масива, тоесть количество элементов
// в нашем масиве, то мы получим значение 100.
console.log(arr.length);    //  100
// Хотя в нашем масиве всего 6 элементов, дело в том, что такая
// команда как "length" нам возвращает не количество элементов в
// нашем масиве, а последний индекс плюс один и мы должны помнить
// об этой особенности когда будем работать с масивами.

//06:15